# Generated by Django 3.2.9 on 2021-12-02 12:11

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Are',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Nom')),
                ('forname', models.CharField(max_length=50, verbose_name='Prénom')),
                ('adress1', models.CharField(blank=True, max_length=50, null=True, verbose_name='Adresse')),
                ('adress2', models.CharField(blank=True, max_length=50, null=True, verbose_name='Complément adresse')),
                ('town', models.CharField(blank=True, max_length=50, null=True, verbose_name='Ville')),
                ('coNum', models.CharField(blank=True, max_length=20, null=True, verbose_name='Numéro CO')),
                ('rpps', models.CharField(blank=True, max_length=20, null=True, verbose_name='Rpps')),
                ('postalcode', models.CharField(blank=True, max_length=5, null=True, verbose_name='Code postal')),
                ('telmob', models.CharField(blank=True, max_length=20, null=True, verbose_name='Tél. Mobile')),
                ('tel2', models.CharField(blank=True, max_length=20, null=True, verbose_name='Tél. Perso.')),
                ('phone_hop', models.CharField(blank=True, max_length=12, null=True, verbose_name='Poste')),
                ('phone_secretary', models.CharField(blank=True, max_length=12, null=True, verbose_name='Secrétariat')),
                ('email', models.EmailField(blank=True, max_length=50, null=True)),
                ('secteur', models.CharField(blank=True, choices=[('1', 'Secteur 1'), ('2', 'Secteur 2')], default=True, max_length=10, null=True, verbose_name='Secteur')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='are/photo')),
                ('signature', models.ImageField(blank=True, null=True, upload_to='are/signature')),
            ],
            options={
                'verbose_name': 'Anesthésiste',
                'verbose_name_plural': 'Anesthésistes',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='HopParam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('adress1', models.CharField(max_length=100)),
                ('adress2', models.CharField(blank=True, max_length=100, null=True)),
                ('town', models.CharField(max_length=100)),
                ('postalcode', models.CharField(max_length=5)),
                ('cedex', models.CharField(blank=True, max_length=10, null=True)),
                ('finess', models.CharField(blank=True, max_length=10, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='hop')),
                ('tel', models.CharField(blank=True, max_length=10, null=True)),
                ('fax', models.CharField(blank=True, max_length=10, null=True)),
                ('villes', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'verbose_name': 'Hôpital',
                'verbose_name_plural': 'Hôpitaux',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Rpt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Nom')),
                ('forname', models.CharField(max_length=50, verbose_name='Prénom')),
                ('adress1', models.CharField(blank=True, max_length=50, null=True, verbose_name='Adresse')),
                ('adress2', models.CharField(blank=True, max_length=50, null=True, verbose_name="Complément d'adresse")),
                ('town', models.CharField(blank=True, max_length=50, null=True, verbose_name='Ville')),
                ('codepartname', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nom Départ. CO')),
                ('codepartnum', models.CharField(blank=True, max_length=10, null=True, verbose_name='Num. Départ. CO')),
                ('conum', models.CharField(blank=True, max_length=50, null=True, verbose_name='Num. CO')),
                ('rpps', models.CharField(blank=True, max_length=20, null=True, verbose_name='Num. RPPS')),
                ('urssafnum', models.CharField(blank=True, max_length=50, null=True, verbose_name='URSSAF')),
                ('sirennum', models.CharField(blank=True, max_length=50, null=True, verbose_name='Siren')),
                ('postalcode', models.CharField(blank=True, max_length=10, null=True, verbose_name='Code postal')),
                ('telmob', models.CharField(blank=True, max_length=20, null=True, verbose_name='Tél. Mobile')),
                ('tel2', models.CharField(blank=True, max_length=20, null=True, verbose_name='Tél. Perso')),
                ('tel3', models.CharField(blank=True, max_length=20, null=True, verbose_name='Tél. Travail')),
                ('email', models.EmailField(blank=True, max_length=50, null=True, verbose_name='Email')),
                ('status', models.BooleanField(blank=True, default=True, null=True, verbose_name='Thésé')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='rpt/photo', verbose_name='Photo')),
                ('assurance', models.FileField(blank=True, null=True, upload_to='rpt/assurance', verbose_name='Assurance')),
                ('licence', models.FileField(blank=True, null=True, upload_to='rpt/licence', verbose_name='Licence')),
                ('licence_exp_date', models.DateField(blank=True, null=True, verbose_name='Date expiration licence')),
                ('active', models.BooleanField(blank=True, default=True, null=True, verbose_name='Actif')),
                ('signature', models.ImageField(blank=True, null=True, upload_to='rpt/signature')),
            ],
            options={
                'verbose_name': 'Remplaçant',
                'verbose_name_plural': 'Remplaçants',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='WebColor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(max_length=30, verbose_name='Couleur')),
                ('colorHex', models.CharField(max_length=10, verbose_name='Hexa')),
            ],
            options={
                'verbose_name': 'Couleurs Web',
                'ordering': ['color'],
            },
        ),
        migrations.CreateModel(
            name='Calendrier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='subdivision.webcolor')),
            ],
            options={
                'verbose_name': 'Calendrier',
                'verbose_name_plural': 'Calendriers',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, default='RPT', max_length=10, null=True, verbose_name='Type')),
                ('description', models.TextField(blank=True, default='', max_length=200, null=True, verbose_name='Résumé')),
                ('title', models.CharField(default='RPT :  ', max_length=100, verbose_name='Titre')),
                ('start', models.DateField(verbose_name='Début')),
                ('start_time', models.TimeField(default='00:00:00', verbose_name='Heure début')),
                ('end', models.DateField(blank=True, null=True, verbose_name='Fin')),
                ('end_time', models.TimeField(default='00:00:00', verbose_name='Heure Fin')),
                ('is_cancelled', models.BooleanField(blank=True, default=False)),
                ('all_day', models.BooleanField(blank=True, default=True)),
                ('pay_date', models.DateField(blank=True, null=True, verbose_name='Date de paiement')),
                ('pay_type', models.CharField(blank=True, choices=[('C', 'Chèque'), ('V', 'Virement')], max_length=20, null=True, verbose_name='Moyen de paiement')),
                ('pay_amount', models.IntegerField(blank=True, default=900, null=True, verbose_name='Montant')),
                ('pay_numchq', models.CharField(blank=True, max_length=50, null=True, verbose_name='N° chèque')),
                ('are', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='are', to='subdivision.are', verbose_name='Anesthésiste')),
                ('calendrier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='subdivision.calendrier', verbose_name='Type édition')),
                ('pay_are', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ArePay', to='subdivision.are', verbose_name='Payeur')),
                ('rpt', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='rpt', to='subdivision.rpt', verbose_name='Remplaçant')),
            ],
            options={
                'verbose_name': 'Evènement',
                'verbose_name_plural': 'Evènements',
                'ordering': ['start', 'end'],
                'unique_together': {('rpt', 'start'), ('are', 'start')},
            },
        ),
    ]
